ETHERFI_SC_IPFS_GATEWAY=https://ether-fi-mainnet.infura-ipfs.io/ipfs
ETHERFI_SC_BIDDER=0xF88866238ecE28A41e050b04360423a5d1181d49
ETHERFI_SC_GRAPH_URL=https://api.studio.thegraph.com/query/41778/etherfi-mainnet/0.0.4
ETHERFI_SC_PRIVATE_KEYS_FILE_LOCATION=/privateEtherfiKeystore.json
ETHERFI_SC_PASSWORD=Password123!
# will not be created or maintained if undefined.
ETHERFI_SC_TEKU_PROPOSER_FILE=/teku_proposer_config.json
# docker, kubernetes or none
ETHERFI_SC_RESTART_MODE=docker
# excluded ids or validator public keys
ETHERFI_SC_EXCLUDED_VALIDATORS=0xa,0xb,0xc
# cleanup exited keys. false also syncs non-active keys.
ETHERFI_SC_CLEANUP_EXITED_KEYS=false
# where to store keys. can be: disk|vault
ETHERFI_SC_KEY_STORAGE_MODE=disk
# disk output location if storage mode is disk
ETHERFI_SC_DISK_OUTPUT_LOCATION=/_storage_
# vault url if storage mode is vault
ETHERFI_SC_VAULT_URL=https://some-vault-url.example.com
# vault authentication mode. can be: token|kubernetes
ETHERFI_SC_VAULT_AUTHENTICATION_MODE=kubernetes
# vault client token, if authentication mode is token
ETHERFI_SC_VAULT_CLIENT_TOKEN=some_client_token
# vault kubernetes auth path, if authentication mode is kubernetes
ETHERFI_SC_VAULT_KUBERNETES_AUTH_PATH=auth/kubernetes/login
# vault kubernetes service account path, if authentication mode is kubernetes
ETHERFI_SC_VAULT_KUBERNETES_SERVICE_ACCOUNT_PATH=/some/path/to/jwt.json
