ETHERFI_SC_IPFS_GATEWAY=https://ether-fi-mainnet.infura-ipfs.io/ipfs
ETHERFI_SC_BIDDER=0xF88866238ecE28A41e050b04360423a5d1181d49
ETHERFI_SC_GRAPH_URL=https://api.studio.thegraph.com/query/41778/etherfi-mainnet/0.0.4
# can be: create|config - if create, secrets are needed for decrypt process. if read-only, auxiliary files are created only.
ETHERFI_SC_MODE=create
# below 2: required if ETHERFI_SC_MODE=create
ETHERFI_SC_PRIVATE_KEYS_FILE_LOCATION=/privateEtherfiKeystore.json
ETHERFI_SC_PASSWORD=Password123!
# will not be created or maintained if undefined.
ETHERFI_SC_TEKU_PROPOSER_FILE=/teku_proposer_config.json
# will not be created or maintained if undefined. only works for vault configs.
ETHERFI_SC_WEB3SIGNER_CONFIG_FILE=/web3signer_config.yaml
# optional. reloads web3signer on the given url if config file has changed. does nothing if ETHERFI_SC_WEB3SIGNER_CONFIG_FILE is not set. https if tls is used.
ETHERFI_SC_WEB3SIGNER_RELOAD_URL=http://127.0.0.1:8080
# the below are optional, even if web3signer reload url is set. will assume mtls if ALL tls options below are set, no tls if ANY tls option is not set.
ETHERFI_SC_WEB3SIGNER_RELOAD_URL_CLIENT_KEY_PATH=/some/mtls/client-key.pem
ETHERFI_SC_WEB3SIGNER_RELOAD_URL_CLIENT_KEY_PW_PATH=/some/mtls/client-key-pw.txt
ETHERFI_SC_WEB3SIGNER_RELOAD_URL_CLIENT_CERT_PATH=/some/mtls/client-cert.pem
ETHERFI_SC_WEB3SIGNER_RELOAD_URL_SERVER_CERT_PATH=/some/mtls/server-cert.pem
ETHERFI_SC_WEB3SIGNER_RELOAD_URL_SERVER_TLS_NAME=some-server-name-0
# docker, kubernetes or none
ETHERFI_SC_RESTART_MODE=docker
# excluded ids or validator public keys
ETHERFI_SC_EXCLUDED_VALIDATORS=0xa,0xb,0xc
# cleanup exited keys. false also syncs non-active keys.
ETHERFI_SC_CLEANUP_EXITED_KEYS=false
# required if ETHERFI_SC_MODE=create or ETHERFI_SC_WEB3SIGNER_CONFIG_FILE is set (needs to be vault in this case) (everything below regarding storage is the same). where to store keys. can be: disk|vault
ETHERFI_SC_KEY_STORAGE_MODE=disk
# disk output location if storage mode is disk
ETHERFI_SC_DISK_OUTPUT_LOCATION=/_storage_
# vault url if storage mode is vault
ETHERFI_SC_VAULT_URL=https://some-vault-url.example.com
# vault client token file path if storage mode is vault
ETHERFI_SC_VAULT_CLIENT_TOKEN_PATH=/path/to/vault/token
# vault secret mount path if storage mode is vault
ETHERFI_SC_VAULT_VALIDATORS_SECRET_MOUNT_PATH=some-secrets-engine
# path of validator key secrets in vault secrets engine given above if storage mode is vault
ETHERFI_SC_VAULT_VALIDATORS_PATH=validators
